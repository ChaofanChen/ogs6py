from ogs6py import OGS
model=OGS(PROJECT_FILE="test.prj")
model.addGeom(filename="square_1x1.gml")
model.addMesh(filename="square_1x1_quad_1e2.vtu")
model.setProcess(name="SD",type="SMALL_DEFORMATION",integration_order="2",solid_density="rho_sr", specific_body_force="0 0")
model.setProcessRelation(type="LinearElasticIsotropic",youngs_modulus="E",poissons_ratio="nu")
model.addProcessVariable(process_variable="process_variable", process_variable_name="displacement")
model.addProcessVariable(secondary_variable="sigma",type="static", output_name="sigma")
model.addTime_loopProcess(nonlinear_solver_name="basic_newton",convergence_type="DeltaX", norm_type="NORM2", abstol="1e-15", time_discretization="BackwardEuler")
model.setTime_loopStepping(type="FixedTimeStepping",t_initial="0",t_end="1",repeat="4",delta_t="0.25")
model.addTime_loopOutput(type="VTK",prefix="blubb",variables=["displacement", "sigma"])
model.addParameter(name="E",type="Constant",value="1")
model.addParameter(name="nu",type="Constant",value="0.3")
model.addParameter(name="rho_sr",type="Constant",value="1")
model.addParameter(name="displacement0",type="Constant",value="0 0")
model.addParameter(name="dirichlet0",type="Constant",value="0")
model.addParameter(name="dirichlet1",type="Constant",value="0.05")
model.setIC(process_variable_name="displacement", components="2", order="1", initial_condition="displacement0")
model.addBC(process_variable_name="displacement",geometrical_set="square_1x1_geometry",geometry="left",type="Dirichlet", component="0", parameter="dirichlet0")
model.addBC(process_variable_name="displacement",geometrical_set="square_1x1_geometry",geometry="bottom",type="Dirichlet", component="1", parameter="dirichlet0")
model.addBC(process_variable_name="displacement",geometrical_set="square_1x1_geometry",geometry="top",type="Dirichlet", component="1", parameter="dirichlet1")
model.addNonlinear_solver(name="basic_newton",type="Newton",max_iter="4",linear_solver="general_linear_solver")
model.addLinear_solver(name="general_linear_solver", kind="lis",solver_type="cg",precon_type="jacobi",max_iteration_step="10000",error_tolerance="1e-16")
model.addLinear_solver(name="general_linear_solver", kind="eigen",solver_type="CG",precon_type="Diagonal",max_iteration_step="10000",error_tolerance="1e-16")
model.addLinear_solver(name="general_linear_solver", kind="petsc",solver_type="cg",precon_type="bjacobi",max_iteration_step="10000",error_tolerance="1e-16")
model.writeInput()
model.runModel()
